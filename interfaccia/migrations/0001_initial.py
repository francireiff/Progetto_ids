# Generated by Django 5.2.1 on 2025-05-13 12:54

import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Farmaco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('tipo', models.CharField(choices=[('insulina', 'Insulina'), ('orale', 'Farmaco Antidiabetico Orale')], max_length=20)),
                ('descrizione', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Farmaco',
                'verbose_name_plural': 'Farmaci',
            },
        ),
        migrations.CreateModel(
            name='Utente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo', models.CharField(choices=[('paziente', 'Paziente'), ('medico', 'Diabetologo'), ('admin', 'Amministratore')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Diabetologo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('cognome', models.CharField(max_length=100)),
                ('utente', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profilo_diabetologo', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Diabetologo',
                'verbose_name_plural': 'Diabetologi',
            },
        ),
        migrations.CreateModel(
            name='Paziente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('cognome', models.CharField(max_length=100)),
                ('data_nascita', models.DateField()),
                ('fumatore', models.BooleanField(default=False)),
                ('ex_fumatore', models.BooleanField(default=False)),
                ('problemi_alcol', models.BooleanField(default=False)),
                ('problemi_stupefacenti', models.BooleanField(default=False)),
                ('obesita', models.BooleanField(default=False)),
                ('pregresse_patologie', models.TextField(blank=True)),
                ('comorbidita', models.TextField(blank=True)),
                ('medico_riferimento', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pazienti', to='interfaccia.diabetologo')),
                ('utente', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profilo_paziente', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Paziente',
                'verbose_name_plural': 'Pazienti',
            },
        ),
        migrations.CreateModel(
            name='Patologia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descrizione', models.TextField(blank=True)),
                ('tipo', models.CharField(choices=[('pregressa', 'Patologia Pregressa'), ('concomitante', 'Patologia Concomitante')], max_length=12)),
                ('data_inizio', models.DateField()),
                ('data_fine', models.DateField(blank=True, null=True)),
                ('paziente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patologie', to='interfaccia.paziente')),
            ],
            options={
                'verbose_name': 'Patologia',
                'verbose_name_plural': 'Patologie',
            },
        ),
        migrations.CreateModel(
            name='LogOperazione',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_ora', models.DateTimeField(default=django.utils.timezone.now)),
                ('tipo_operazione', models.CharField(max_length=50)),
                ('dettagli', models.TextField()),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operazioni', to='interfaccia.diabetologo')),
                ('paziente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operazioni_ricevute', to='interfaccia.paziente')),
            ],
            options={
                'verbose_name': 'Log Operazione',
                'verbose_name_plural': 'Log Operazioni',
                'ordering': ['-data_ora'],
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_ora', models.DateTimeField(default=django.utils.timezone.now)),
                ('oggetto', models.CharField(max_length=200)),
                ('testo', models.TextField()),
                ('letto', models.BooleanField(default=False)),
                ('medico_destinatario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_ricevute', to='interfaccia.diabetologo')),
                ('paziente_mittente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_inviate', to='interfaccia.paziente')),
            ],
            options={
                'verbose_name': 'Email',
                'verbose_name_plural': 'Email',
                'ordering': ['-data_ora'],
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_ora', models.DateTimeField(default=django.utils.timezone.now)),
                ('tipo', models.CharField(choices=[('glicemia', 'Alert Glicemia'), ('farmaco', 'Alert Farmaco')], max_length=10)),
                ('descrizione', models.TextField()),
                ('gravita', models.CharField(choices=[('bassa', 'Gravità bassa'), ('media', 'Gravità media'), ('alta', 'Gravità alta')], default='media', max_length=5)),
                ('risolto', models.BooleanField(default=False)),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_ricevuti', to='interfaccia.diabetologo')),
                ('paziente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert', to='interfaccia.paziente')),
            ],
            options={
                'verbose_name': 'Alert',
                'verbose_name_plural': 'Alert',
                'ordering': ['-data_ora'],
            },
        ),
        migrations.CreateModel(
            name='RilevazioneGlicemia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_ora', models.DateTimeField(default=django.utils.timezone.now)),
                ('valore', models.FloatField(validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(600)])),
                ('momento', models.CharField(choices=[('pre', 'Pre-pasto'), ('post', 'Post-pasto')], max_length=4)),
                ('pasto', models.CharField(choices=[('colazione', 'Colazione'), ('pranzo', 'Pranzo'), ('cena', 'Cena')], max_length=10)),
                ('paziente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rilevazioni_glicemia', to='interfaccia.paziente')),
            ],
            options={
                'verbose_name': 'Rilevazione Glicemia',
                'verbose_name_plural': 'Rilevazioni Glicemia',
                'ordering': ['-data_ora'],
            },
        ),
        migrations.CreateModel(
            name='Sintomo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descrizione', models.CharField(max_length=200)),
                ('data_inizio', models.DateTimeField(default=django.utils.timezone.now)),
                ('data_fine', models.DateTimeField(blank=True, null=True)),
                ('paziente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sintomi', to='interfaccia.paziente')),
            ],
            options={
                'verbose_name': 'Sintomo',
                'verbose_name_plural': 'Sintomi',
                'ordering': ['-data_inizio'],
            },
        ),
        migrations.CreateModel(
            name='Terapia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inizio', models.DateField()),
                ('data_fine', models.DateField()),
                ('numero_assunzioni_giornaliere', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('quantita_per_assunzione', models.FloatField(validators=[django.core.validators.MinValueValidator(0.1)])),
                ('indicazioni', models.TextField(blank=True)),
                ('attiva', models.BooleanField(default=True)),
                ('farmaco', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terapie', to='interfaccia.farmaco')),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terapie_prescritte', to='interfaccia.diabetologo')),
                ('paziente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terapie', to='interfaccia.paziente')),
            ],
            options={
                'verbose_name': 'Terapia',
                'verbose_name_plural': 'Terapie',
            },
        ),
        migrations.CreateModel(
            name='AssunzioneFarmaco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_ora', models.DateTimeField(default=django.utils.timezone.now)),
                ('quantita', models.FloatField(validators=[django.core.validators.MinValueValidator(0.1)])),
                ('farmaco', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assunzioni', to='interfaccia.farmaco')),
                ('paziente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assunzioni_farmaci', to='interfaccia.paziente')),
                ('terapia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assunzioni', to='interfaccia.terapia')),
            ],
            options={
                'verbose_name': 'Assunzione Farmaco',
                'verbose_name_plural': 'Assunzioni Farmaci',
                'ordering': ['-data_ora'],
            },
        ),
    ]
